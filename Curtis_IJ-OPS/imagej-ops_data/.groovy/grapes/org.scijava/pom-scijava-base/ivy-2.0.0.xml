<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="org.scijava"
		module="pom-scijava-base"
		revision="2.0.0"
		status="release"
		publication="20161118062904"
	>
		<license name="CC0 1.0 Universal License" url="http://creativecommons.org/publicdomain/zero/1.0/" />
		<description homepage="http://www.scijava.org/">
		This POM is a base which SciJava-based projects can extend to inherit helpful build configuration. It ensures that projects all use a compatible build environment, including versions of Maven plugins and Java itself. It does _not_ provide any dependency version management; see org.scijava:pom-scijava for that.
		</description>
		<m:properties__project.reporting.outputEncoding>UTF-8</m:properties__project.reporting.outputEncoding>
		<m:properties__license.licenseName>N/A</m:properties__license.licenseName>
		<m:properties__scijava.mvn.version>3.0.4</m:properties__scijava.mvn.version>
		<m:properties__license.copyrightOwners>N/A</m:properties__license.copyrightOwners>
		<m:properties__maven.build.timestamp.format>yyyy-MM-dd&apos;T&apos;HH:mm:ssZ</m:properties__maven.build.timestamp.format>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__scijava.groupIds>org.scijava,net.imagej,net.imglib2,io.scif,sc.fiji</m:properties__scijava.groupIds>
		<m:properties__scijava.jvm.test.version>${scijava.jvm.version}</m:properties__scijava.jvm.test.version>
		<m:properties__scijava.jvm.version>1.8</m:properties__scijava.jvm.version>
		<m:properties__scijava-maven-plugin.version>1.0.0</m:properties__scijava-maven-plugin.version>
		<m:properties__license.projectName>${project.description}</m:properties__license.projectName>
		<m:properties__scijava.team.roles>founder,lead,developer,debugger,reviewer,support,maintainer</m:properties__scijava.team.roles>
		<m:maven.plugins>null__maven-source-plugin__null|null__maven-surefire-plugin__null|null__maven-enforcer-plugin__null|org.codehaus.mojo__build-helper-maven-plugin__null|org.codehaus.mojo__buildnumber-maven-plugin__null|org.fusesource.mvnplugins__maven-graph-plugin__null|net.imagej__imagej-maven-plugin__0.6.0|com.zenjava__javafx-maven-plugin__null|com.github.maven-nar__nar-maven-plugin__null|org.scijava__scijava-maven-plugin__null</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
	</publications>
</ivy-module>
